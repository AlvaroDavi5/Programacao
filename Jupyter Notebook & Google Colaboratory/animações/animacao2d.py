# -*- coding: utf-8 -*-
"""Animacao2D.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vUA0jFYh748KzlxoLnMQ_tvUOxAiv0sM
"""

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D  
from matplotlib import animation, rc

# Rotation Function
def rotZ (ang):
  # Rotation matrix
  R = np.eye(3)
  R[0,0] = np.cos(ang)
  R[0,1] = -np.sin(ang)
  R[1,0] = np.sin(ang)
  R[1,1] = np.cos(ang)
  return R


# Translation Function
def move(dx,dy):
  T = np.eye(3)
  T[0,2] = dx
  T[1,2] = dy
  return T


# Angle of Rotation
angulo = 180
ang_rad = (angulo/180)*np.pi

# Rotation increment
inc = ang_rad/100

#Create object
pts0 = np.array([[3,1],[5,1],[5,3],[3,3],[3,1]])
# Preparing the points to be in homogeneous coordinates
pts0 = pts0.T
pts0 = np.vstack([pts0,np.ones(pts0.shape[1])])
# Corner used to rotate the object
corner = pts0[:,0]

# First set up the figure, the axis, and the plot element we want to animate
fig, ax = plt.subplots(figsize=[8,8])
plt.close()

ax.set_xlim((-5, 15))
ax.set_ylim((-5, 15))
ax.set_aspect('equal')
ax.grid()

# Listing the objects that are going to be drawn
obj1, = ax.plot([], [], lw=2,color='#4004B0' )
obj2, = ax.plot([], [], '--', lw=2)  
obj3, = ax.plot([], [], lw=2)  

# initialization function: 
def init():
    obj1.set_data(pts0[0,:], pts0[1,:]) 
    return (obj1,)

# animation function. This is called sequentially
def animate(i):
  # Defining the transformations for rotating the object around its corner
  T1 = move(-corner[0],-corner[1])
  Rz = rotZ(i*inc)
  T2 = move(corner[0],corner[1])
  # Applying the transformation on the object
  pts1 = np.dot(T2,np.dot(Rz,np.dot(T1,pts0)))   # pts1 = T2.Rz.T1.pts0
  # Defining the translation to be applied to a second object
  T3 = move(-0.05*i,0.1*i)
  # Move the object
  pts2 = np.dot(T3,pts0)

  obj2.set_data(pts1[0,:], pts1[1,:])
  obj3.set_data(pts2[0,:], pts2[1,:])
  
  return (obj2, obj3,)

# Make the animation
anim = animation.FuncAnimation(fig, animate, init_func=init,
                             frames=100, interval=100, blit=True)

# Note: below is the part which makes it work on Colab
rc('animation', html='jshtml')
anim