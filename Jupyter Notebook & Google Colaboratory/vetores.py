# -*- coding: utf-8 -*-
"""Vetores.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/138vRcgMOAOwWK0tIUUGCns4TBFLvTDBM

#Básico de Vetores e Matrizes para Transformações Geométricas 
#Parte 1 - Vetores

Transformações Geométricas são feitas usando-se vetores e matrices.
Esse notebook traz as operações básicas para se criar e manipular vetores.

#Bibliotecas 

A biblioteca principal é a Numpy, a qual é uma parte do Scypi "Python-based ecosystem of open-source software for mathematics, science, and engineering".

Para começar qualquer código, nós temos que primeiro importa as bibliotecas:
"""

import numpy as np
import scipy
import matplotlib.pyplot as plt # maneira curta de chamar a biblioteca

"""## Declarando Vetores

Em 2D, no plano cartesiano vetores e pontos são representados da mesma forma. 
> $p=(x,y)^T$ \\
> $v=(x,y)^T$

A magnitude de um vetor $v$ é definida como  $\left \| v \right \|$ e calculada como: 
>  $\left \| v \right \|=\sqrt{x^{2}+y^{2}}$.


Mas se quisermos representar pontos e vetores em coordenadas homogêneas, usamos mais uma coordenada. No caso dos pontos, esse coordenada extra é 1 e no caso de vetores é 0.

> $p=(x,y,1)^T$ \\
> $v=(x,y,0)^T$

Para usar a biblioteca Numpy, vamos declarar um ponto como um numpy array, com um python array como argumento. Desta forma:
"""

#como vetor linha
v_row = np.array([4,2,3,6, 13,-4, 7.8])
print("row= ", v_row)
#como vetor coluna
v_col = np.array([[1],[2],[3],[-5],[0]])
print("col= \n", v_col)

"""Algumas informações sobre vetores como data type, array size e data content, podem ser conseguidas usando os seguintes métodos:"""

print('Data type:', v_row.dtype)
print('Vector size:',v_row.size)
print('Data: \n', v_row)
print("")
print('Data type:', v_col.dtype)
print('Vector size:',v_col.size)
print('Data: \n', v_col)

"""Como selecionar um elemento de um vetor:"""

p = np.array([-1,1,2,3,4,5,6,7,0,9,12.5])
print("Primeiro elemento do vetor: ",p[0])
print("O quarto elemento do vetor: ",p[3])
print("O último elemento do vetor: ",p[-1])

"""#Atenção: 
###Em Numpy, o primeiro índice de um vetor é 0 (zero).

## Operações e propriedades de vetores
Algumas operações e propriedades de vetores que veremos são:

* Adição
* Subtração
* Multiplicação
* Norma do vetor
* Ortogonalidade

### Adição
Considere os seguintes dois vetores:
"""

v1 = np.array([2.46,3.09,4.5,5.3])
v2 = np.array([1.3,1.3,1.3,1.3])

"""A soma de elemento a elemento dos dois vetores pode ser calculada como:"""

v12 = v1 + v2
print(v1)
print(v2)
print(v12)

"""### Subtração
A subtração é similar a adição e é calculada elemento a elemento.
"""

v12 = v1-v2
print(v1)
print(v2)
print(v12)

"""### Multiplicação de vetores
Há duas maneiras de se multiplicar vetores:
* Multiplicação por um escalar
* Produto Interno (Dot product)
* Produto Vetorial (Cross product)

#### Multiplicação por escalar
"""

escalar = 3
vetor = np.array([1, 2, 3])

print(escalar * vetor)

"""#### Produto Interno

> $dot\left ( V_1 , V_2 \right )= V_1 . V_2 = {\sum_{i}{v_{1}^{i} .  v_{2}^{i}}}$

onde $v_{1}^{i}$ and $v_{2}^{i}$  são os elementos dos vetores $V_{1}$ e $V_{2}$ respectivamente

Outra notação comumente usada é:
> ${V_1}^T V_2 = V_1 . V_2$

Em Python, podemos calcular o produto interno usando o Numpy:
"""

v1 = np.array([2,2,2])
v2 = np.array([3,3,3])
print(v1)
print(v2)
print(np.dot(v1,v2))

"""#### Produto Vetorial

O produto vetorial entre dois vetores gera um terceiro vetor ortogonal aos dois primeiros  
> $V_3 = V_1 \times V_2$

Usando o Numpy, podemos calcular o produto vetorial da seguinte forma:
"""

v1 = np.array([1,0,0])
v2 = np.array([0,1,0])
print(v1)
print(v2)
print(np.cross(v1,v2))

"""### Norma de um vetor
A norma $L_{pth}$ de um vetor $V$ é dada por: 

> $\left \| V  \right \|_p = \left ( \sum_{i}^{n}\left | v_i \right |^p \right ) ^\frac{1}{p}$

As duas normas mais comuns são as normas  L1 e L2.

* A norma $L_1$  é calculada por:
>  $\left \| V  \right \|_1 =  \sum_{i}^{}\left | v_i \right | $ 

Um exemplo de como se calcula a norma L1 é:
"""

v = np.array([2,3,4,5])
print(np.linalg.norm(v,ord=1))

"""* A norma $L_2$ é:
>  $\left \| V  \right \|_2 =  \left (\sum_{i}^{}\left | v_i \right |² \right ) ^\frac{1}{2} = \sqrt{\sum_{i}^{}\left | v_i \right |²} $

E um exemplo:

"""

v = np.array([2,3,4,5])
print(np.linalg.norm(v,ord=2))

"""### Ortogonalidade
Dois vetores são ortogonais (ou perpendiculares entre si) se o seu produto interno dá zero. 
"""

v1=np.array([2,1,4])
v2=np.array([6,0,-3]) # orthogonal to v1 if dot product = 0
print(np.dot(v1,v2))